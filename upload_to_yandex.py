import os
import requests
from requests.auth import HTTPBasicAuth

# ==== –ù–ê–°–¢–†–û–ô–ö–ò ====
YANDEX_USER = "oleshella@yandex.kz"
YANDEX_PASSWORD = "ydnybqhzlgggieka"
YANDEX_FOLDER = "nika_photos"  # –ü–æ–¥–ø–∞–ø–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
LOCAL_FOLDER = "static/img"    # –ü–∞–ø–∫–∞, –≥–¥–µ –ª–µ–∂–∞—Ç —Ñ–æ—Ç–∫–∏ –ª–æ–∫–∞–ª—å–Ω–æ

# ==== –§–£–ù–ö–¶–ò–Ø –ó–ê–ì–†–£–ó–ö–ò ====
def upload_image_to_yandex(local_path, remote_name):
    url = f"https://webdav.yandex.ru/{YANDEX_FOLDER}/{remote_name}"
    with open(local_path, 'rb') as f:
        response = requests.put(url, data=f, auth=HTTPBasicAuth(YANDEX_USER, YANDEX_PASSWORD))
    if response.status_code == 201 or response.status_code == 204:
        return f"https://disk.yandex.kz/d/XTfQVMFjFSUQ7A/files/{remote_name}"
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ {remote_name}: {response.status_code}")
        return None

# ==== –ì–õ–ê–í–ù–ê–Ø –¢–û–ß–ö–ê ====
def upload_all_images(folder_path):
    uploaded = []
    already_uploaded = set()
    cache_file = "data/yandex_uploaded.txt"

    if os.path.exists(cache_file):
        with open(cache_file, "r", encoding="utf-8") as f:
            already_uploaded = set(line.strip() for line in f)

    uploaded = []
    for filename in os.listdir(LOCAL_FOLDER):
        if filename in already_uploaded:
            print(f"‚è≠ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ: {filename}")
            continue
        if filename.lower().endswith(('.jpg', '.jpeg', '.png', '.webp')):
            local_path = os.path.join(LOCAL_FOLDER, filename)
            print(f"‚¨Ü –ó–∞–≥—Ä—É–∑–∫–∞ {filename}...")
            link = upload_image_to_yandex(local_path, filename)
            if link:
                print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {link}")
                uploaded.append((filename, link))
                with open(cache_file, "a", encoding="utf-8") as f:
                    f.write(filename + "\n")
    return uploaded

# ==== –ó–ê–ü–£–°–ö ====
# if __name__ == "__main__":
#     results = upload_all_images()
#     print("\\nüì¶ –ó–∞–≥—Ä—É–∑–∏–ª–∏ —Ñ–∞–π–ª—ã:")
#     for local, link in results:
#         print(f"{local} ‚Üí {link}")

