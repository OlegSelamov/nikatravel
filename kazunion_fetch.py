import time
import json
import os
from pathlib import Path
from playwright.sync_api import sync_playwright

CONFIG_PATH = "data/kazunion_config.json"

def read_config():
    with open(CONFIG_PATH, 'r', encoding='utf-8') as f:
        return json.load(f)

def safe_check(page, selector):
    try:
        checkbox = page.locator(selector)
        checkbox.wait_for(timeout=5000)
        if checkbox.is_visible() and not checkbox.is_checked():
            checkbox.check(force=True)
            print(f"‚úÖ –ß–µ–∫–±–æ–∫—Å {selector} –≤–∫–ª—é—á–µ–Ω")
        else:
            print(f"‚ÑπÔ∏è –ß–µ–∫–±–æ–∫—Å {selector} —É–∂–µ –≤–∫–ª—é—á—ë–Ω –∏–ª–∏ —Å–∫—Ä—ã—Ç")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≥–∞–ª–æ—á–∫—É {selector}: {e}")

def run():
    config = read_config()
    nights = str(config.get("nights", [5])[0])
    adults = str(config.get("ADULT", 2))
    meals = config.get("meal", [])
    stars = config.get("STARS", [])
    currency = config.get("currency", "KZT")

    with sync_playwright() as p:
        browser = p.chromium.launch(headless=False)
        page = browser.new_page()
        print("üîÑ –û—Ç–∫—Ä—ã–≤–∞–µ–º Kazunion...")
        page.goto("https://online.kazunion.com/search_tour")
        page.wait_for_timeout(10000)

        try:
            page.evaluate("document.querySelector(\"select[name='TOWNFROMINC']\").style.display = 'block'")
            page.evaluate("document.querySelector(\"select[name='TOWNFROMINC']\").style.opacity = '1'")
            page.select_option("select[name='TOWNFROMINC']", config["city_code"])
            page.wait_for_timeout(1000)

            page.evaluate("document.querySelector(\"select[name='STATEINC']\").style.display = 'block'")
            page.evaluate("document.querySelector(\"select[name='STATEINC']\").style.opacity = '1'")
            page.select_option("select[name='STATEINC']", config["country_code"])
            page.wait_for_timeout(2000)

            # –î–∞—Ç–∞
            page.click("input[name='CHECKIN_BEG']")
            page.wait_for_timeout(500)
            page.fill("input[name='CHECKIN_BEG']", "")
            page.fill("input[name='CHECKIN_BEG']", config["departure_date"])
            page.wait_for_timeout(500)
            page.keyboard.press("Enter")
            page.wait_for_timeout(1000)

            # –ù–æ—á–∏
            try:
                page.evaluate("document.querySelector(\"select[name='NIGHTS_FROM']\").style.display = 'block'")
                page.evaluate("document.querySelector(\"select[name='NIGHTS_FROM']\").style.opacity = '1'")
                page.wait_for_timeout(500)
                page.select_option("select[name='NIGHTS_FROM']", nights)
                print(f"‚úÖ –ù–æ—á–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã: {nights}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –Ω–æ—á–µ–π: {e}")

            # –í–∑—Ä–æ—Å–ª—ã–µ
            try:
                page.click(".ADULT_chosen .chosen-single", force=True)
                page.wait_for_timeout(500)
                options = page.locator(".ADULT_chosen .chosen-drop ul li")
                count = options.count()
                found = False
                for i in range(count):
                    text = options.nth(i).inner_text().strip()
                    if text == adults:
                        options.nth(i).click(force=True)
                        print(f"‚úÖ –í–∑—Ä–æ—Å–ª—ã–µ: {text}")
                        found = True
                        break
                if not found:
                    print(f"‚ö†Ô∏è –í–∞—Ä–∏–∞–Ω—Ç '{adults}' –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –≤–∑—Ä–æ—Å–ª—ã—Ö")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤–∑—Ä–æ—Å–ª—ã—Ö: {e}")

            # –í–∞–ª—é—Ç–∞
            print("üí± –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∞–ª—é—Ç—É...")
            page.evaluate("document.querySelector(\"select[name='CURRENCY']\").style.display = 'block'")
            page.evaluate("document.querySelector(\"select[name='CURRENCY']\").style.opacity = '1'")
            page.select_option("select[name='CURRENCY']", currency)
            print("üí± –í–∞–ª—é—Ç–∞ –≤—ã–±—Ä–∞–Ω–∞")

            # –ü–∏—Ç–∞–Ω–∏–µ
            try:
                page.locator("input[name='MEALS_ANY']").click()
                page.wait_for_selector(".MEALS input[type='checkbox']", timeout=5000)
                for meal_code in meals:
                    try:
                        checkbox = page.locator(f".MEALS input[type='checkbox'][value='{meal_code}']")
                        checkbox.wait_for(timeout=3000)
                        if checkbox.is_visible() and not checkbox.is_checked():
                            checkbox.check(force=True)
                            print(f"‚úÖ –ü–∏—Ç–∞–Ω–∏–µ {meal_code} –≤–∫–ª—é—á–µ–Ω–æ")
                        else:
                            print(f"‚ÑπÔ∏è –ü–∏—Ç–∞–Ω–∏–µ {meal_code} —É–∂–µ –≤—ã–±—Ä–∞–Ω–æ –∏–ª–∏ –Ω–µ –≤–∏–¥–Ω–æ")
                    except Exception as inner_e:
                        print(f"‚ö†Ô∏è –ü–∏—Ç–∞–Ω–∏–µ {meal_code} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ —Å–∫—Ä—ã—Ç–æ: {inner_e}")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –±–ª–æ–∫ –ø–∏—Ç–∞–Ω–∏—è: {e}")

            # –ó–≤–µ–∑–¥—ã
            print("‚è≥ –ñ–¥—ë–º –±–ª–æ–∫ –∑–≤—ë–∑–¥...")
            page.wait_for_selector(".STARS", timeout=10000)
            print("‚úÖ –û—Ç–º–µ—á–∞–µ–º –∑–≤—ë–∑–¥—ã...")
            for star_val in stars:
                try:
                    locator = page.locator(f".STARS input[type='checkbox'][value='{star_val}']")
                    locator.wait_for(timeout=5000)
                    if not locator.is_checked():
                        locator.check(force=True)
                        print(f"‚≠ê –ó–≤–µ–∑–¥–∞ {star_val} –≤–∫–ª—é—á–µ–Ω–∞")
                except Exception as e:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å –∑–≤–µ–∑–¥—É {star_val}: {e}")

            # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
            print("‚úÖ –í–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã...")
            safe_check(page, "input[name='FREIGHT']")
            safe_check(page, "input[name='FILTER']")
            safe_check(page, "input[name='PARTITION_PRICE']")

            print("‚ñ∂Ô∏è –ñ–¥—ë–º –∫–Ω–æ–ø–∫—É '–ò—Å–∫–∞—Ç—å' –∏ –∫–ª–∏–∫–∞–µ–º –¥–≤–∞–∂–¥—ã...")
            page.wait_for_selector("button.load.right:not([disabled])", timeout=10000)
            page.click("button.load.right")
            page.wait_for_timeout(5000)
            page.click("button.load.right")

            try:
                # –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑ —Å–Ω–æ–≤–∞ ‚Äî —á—Ç–æ–±—ã –ª–µ–Ω–∏–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ç–æ—á–Ω–æ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
                page.evaluate("window.scrollBy(0, document.body.scrollHeight)")
                page.wait_for_timeout(3000)

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML
                html = page.content()
                Path("data").mkdir(exist_ok=True)
                with open("data/kazunion_result.html", "w", encoding="utf-8") as f:
                    f.write(html)

                page.screenshot(path="data/debug_table.png", full_page=True)
                print("‚úÖ HTML —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ kazunion_result.html")
                print("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã: debug_table.png")

                os.system("python parserhtml.py")
                os.system("python auto_booking_scraper.py")

            except Exception as e:
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {e}")

        finally:
            browser.close()

if __name__ == "__main__":
    try:
        run()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}")
