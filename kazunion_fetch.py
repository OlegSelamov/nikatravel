import subprocess
import datetime
import os
import time
import json
import os
from pathlib import Path
from playwright.sync_api import sync_playwright

CONFIG_PATH = "data/kazunion_config.json"

def read_config():
    with open(CONFIG_PATH, 'r', encoding="utf-8") as f:
        return json.load(f)

def safe_check(page, selector):
    try:
        checkbox = page.locator(selector)
        checkbox.wait_for(timeout=5000)
        if checkbox.is_visible() and not checkbox.is_checked():
            checkbox.check(force=True)
            print(f"‚úÖ –ß–µ–∫–±–æ–∫—Å {selector} –≤–∫–ª—é—á–µ–Ω")
        else:
            print(f"‚ÑπÔ∏è –ß–µ–∫–±–æ–∫—Å {selector} —É–∂–µ –≤–∫–ª—é—á—ë–Ω –∏–ª–∏ —Å–∫—Ä—ã—Ç")
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å –≥–∞–ª–æ—á–∫—É {selector}: {e}")

def wait_for_loader(page):
    try:
        print("‚è≥ –ñ–¥—ë–º –∑–∞–≥—Ä—É–∑–∫—É...")
        page.wait_for_selector("div.loader", state="attached", timeout=3000)
        page.wait_for_selector("div.loader", state="detached", timeout=15000)
        print("‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    except:
        print("‚ö†Ô∏è –°–ø–∏–Ω–Ω–µ—Ä –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º")

def run():
    config = read_config()
    nights = str(config.get("nights", [5])[0])
    adults = str(config.get("ADULT", 2))
    meals = config.get("meal", [])
    stars = config.get("STARS", [])
    currency = config.get("currency", "KZT")

    with sync_playwright() as p:
        browser = p.chromium.launch(headless=True)
        page = browser.new_page()
        print("üîÑ –û—Ç–∫—Ä—ã–≤–∞–µ–º Kazunion...")
        page.goto("https://online.kazunion.com/search_tour", timeout=60000, wait_until="domcontentloaded")
        page.wait_for_timeout(5000)

        try:
            # –ì–æ—Ä–æ–¥
            page.evaluate("document.querySelector(\"select[name='TOWNFROMINC']\").style.display = 'block'")
            page.select_option("select[name='TOWNFROMINC']", config["city_code"])
            print(f"üèô –ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω: {config['city_code']}")
            wait_for_loader(page)

            # –°—Ç—Ä–∞–Ω–∞
            print("‚è≥ –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã...")
            for _ in range(30):
                display = page.evaluate("getComputedStyle(document.querySelector(\"select[name='STATEINC']\")).display")
                if display != "none":
                    print("‚úÖ –°—Ç—Ä–∞–Ω–∞ —Å—Ç–∞–ª–∞ –≤–∏–¥–∏–º–æ–π")
                    break
                time.sleep(0.5)
            else:
                print("‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∞ –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å ‚Äî –ø—Ä–æ–±—É–µ–º —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤—Ä—É—á–Ω—É—é")
                page.evaluate("document.querySelector(\"select[name='STATEINC']\").style.display = 'block'")
                page.evaluate("document.querySelector(\"select[name='STATEINC']\").style.opacity = '1'")
                time.sleep(1)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
            available_values = page.eval_on_selector_all(
                "select[name='STATEINC'] option",
                "opts => opts.map(opt => opt.value)"
            )

            if config["country_code"] not in available_values:
                print(f"‚ùå –°—Ç—Ä–∞–Ω–∞ —Å –∫–æ–¥–æ–º {config['country_code']} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞!")
                return

            page.select_option("select[name='STATEINC']", config["country_code"])
            print(f"üåç –°—Ç—Ä–∞–Ω–∞ –≤—ã–±—Ä–∞–Ω–∞: {config['country_code']}")
            wait_for_loader(page)

            # –î–∞—Ç–∞
            page.click("input[name='CHECKIN_BEG']", force=True)
            page.fill("input[name='CHECKIN_BEG']", "")
            page.fill("input[name='CHECKIN_BEG']", config["departure_date"])
            page.keyboard.press("Enter")
            page.mouse.click(100, 100)  # –∫–ª–∏–∫, —á—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å
            page.wait_for_timeout(1000)
            print(f"üìÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞: {config['departure_date']}")

            # –ù–æ—á–∏ ‚Äî —É–º–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ
            print("‚è≥ –ñ–¥—ë–º –ø–æ–ª–µ '–ù–æ—á–µ–π'...")

            # –ú–∞–∫—Å–∏–º—É–º 20 –ø–æ–ø—ã—Ç–æ–∫ (10 —Å–µ–∫)
            for _ in range(20):
                ready = page.evaluate("""
                    () => {
                        const el = document.querySelector("select[name='NIGHTS_FROM']");
                        if (!el) return false;
                        if (el.disabled || getComputedStyle(el).display === 'none') {
                            el.style.display = 'block';
                            el.disabled = false;
                        }
                        return !el.disabled && getComputedStyle(el).display !== 'none';
                    }
                """)
                if ready:
                    print("üåô –ü–æ–ª–µ '–ù–æ—á–µ–π' –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
                    break
                time.sleep(0.5)
            else:
                print("‚ùå –ü–æ–ª–µ '–ù–æ—á–µ–π' —Ç–∞–∫ –∏ –Ω–µ —Å—Ç–∞–ª–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º ‚Äî –ø—Ä–µ—Ä—ã–≤–∞–µ–º")
                return

            page.select_option("select[name='NIGHTS_FROM']", nights)
            print(f"üåô –ö–æ–ª-–≤–æ –Ω–æ—á–µ–π —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {nights}")

            # –í–∑—Ä–æ—Å–ª—ã–µ
            try:
                page.click(".ADULT_chosen .chosen-single", force=True)
                page.wait_for_timeout(500)
                options = page.locator(".ADULT_chosen .chosen-drop ul li")
                for i in range(options.count()):
                    if options.nth(i).inner_text().strip() == adults:
                        options.nth(i).click(force=True)
                        print(f"üë• –í–∑—Ä–æ—Å–ª—ã—Ö: {adults}")
                        break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤–∑—Ä–æ—Å–ª—ã—Ö: {e}")

            # –í–∞–ª—é—Ç–∞
            try:
                page.evaluate("document.querySelector(\"select[name='CURRENCY']\").style.display = 'block'")
                page.select_option("select[name='CURRENCY']", currency)
                print(f"üí± –í–∞–ª—é—Ç–∞: {currency}")
            except Exception as e:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É: {e}")

            # –ü–∏—Ç–∞–Ω–∏–µ
            try:
                page.locator("input[name='MEALS_ANY']").click()
                page.wait_for_selector(".MEALS input[type='checkbox']", timeout=7000)
                for meal_code in meals:
                    checkbox = page.locator(f".MEALS input[type='checkbox'][value='{meal_code}']")
                    checkbox.wait_for(state="visible", timeout=3000)
                    if not checkbox.is_checked():
                        checkbox.check(force=True)
                        print(f"‚úÖ –ü–∏—Ç–∞–Ω–∏–µ {meal_code} –≤–∫–ª—é—á–µ–Ω–æ")
            except Exception as e:
                print(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–∏—Ç–∞–Ω–∏–µ–º: {e}")

            # –ó–≤–µ–∑–¥—ã
            try:
                page.wait_for_selector(".STARS", timeout=10000)
                for star in stars:
                    locator = page.locator(f".STARS input[type='checkbox'][value='{star}']")
                    if locator.is_visible() and not locator.is_checked():
                        locator.check(force=True)
                        print(f"‚≠ê –ó–≤–µ–∑–¥–∞ {star} –≤–∫–ª—é—á–µ–Ω–∞")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–≤—ë–∑–¥: {e}")

            # –§–∏–ª—å—Ç—Ä—ã
            safe_check(page, "input[name='FREIGHT']")
            safe_check(page, "input[name='FILTER']")
            safe_check(page, "input[name='PARTITION_PRICE']")

            # –ü–æ–∏—Å–∫
            try:
                page.wait_for_selector("button.load.right:not([disabled])", timeout=10000)
                page.click("button.load.right")
                page.wait_for_timeout(3000)
                page.click("button.load.right")
                print("üîç –ü–æ–∏—Å–∫ –∑–∞–ø—É—â–µ–Ω")
            except Exception as e:
                print(f"‚ùå –ö–Ω–æ–ø–∫–∞ '–ò—Å–∫–∞—Ç—å' –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞: {e}")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º
            try:
                page.evaluate("window.scrollBy(0, document.body.scrollHeight)")
                page.wait_for_timeout(3000)
                html = page.content()
                Path("data").mkdir(exist_ok=True)
                with open("data/kazunion_result.html", "w", encoding="utf-8") as f:
                    f.write(html)
                page.screenshot(path="data/debug_table.png", full_page=True)
                print("üì• HTML –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")

                os.system("python parserhtml.py")
                os.system("python auto_booking_scraper.py")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∏–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ: {e}")

        finally:
            browser.close()

def auto_push():
    import subprocess, datetime, os

    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
    subprocess.run(['git', 'config', '--global', 'user.name', 'RailwayBot'])
    subprocess.run(['git', 'config', '--global', 'user.email', 'railway@bot.com'])
    subprocess.run(['git', 'add', 'data/filter.json'])
    subprocess.run(['git', 'commit', '-m', f'–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç—É—Ä–æ–≤ –æ—Ç {now}'])
    subprocess.run(['git', 'push', 'origin', 'main'])

if __name__ == "__main__":
    try:
        run()
        auto_push()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {e}")



