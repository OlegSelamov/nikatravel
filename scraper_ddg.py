import re
import os
import logging
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

# === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ===
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
LOG_FILE = os.path.join(BASE_DIR, "parser.log")

logger = logging.getLogger("parser_logger")
logger.setLevel(logging.INFO)
file_handler = logging.FileHandler(LOG_FILE, encoding="utf-8")
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
file_handler.setFormatter(formatter)
if not logger.hasHandlers():
    logger.addHandler(file_handler)

def clean_hotel_name(hotel_name):
    hotel_name = re.sub(r"\([^)]*\)", "", hotel_name)  # —É–±–∏—Ä–∞–µ–º —Å–∫–æ–±–∫–∏
    hotel_name = re.sub(r"\d\*\s*", "", hotel_name)    # —É–±–∏—Ä–∞–µ–º –∑–≤–µ–∑–¥–Ω–æ—Å—Ç—å
    hotel_name = re.sub(r"[,\s]+", " ", hotel_name)    # —É–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã/–∑–∞–ø—è—Ç—ã–µ
    return hotel_name.strip()

def get_booking_url_by_hotel_name(hotel_name):
    cleaned_name = clean_hotel_name(hotel_name)
    logger.info(f"üîé –ò—â—É –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ Booking: {cleaned_name}")

    options = Options()
    # –í–∏–¥–∏–º—ã–π —Ä–µ–∂–∏–º (–º–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å headless –ø—Ä–∏ –ø–µ—Ä–µ–Ω–æ—Å–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä)
    options.add_argument("--disable-gpu")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--window-size=1280,1024")

    driver = webdriver.Chrome(options=options)
    driver.set_page_load_timeout(25)

    try:
        driver.get("https://www.booking.com")

        # –ñ–¥—ë–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.NAME, "ss"))
        )

        # –í–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ
        search_box = driver.find_element(By.NAME, "ss")
        search_box.clear()
        search_box.send_keys(cleaned_name)

        # –ñ–¥—ë–º –∏ –∫–ª–∏–∫–∞–µ–º –ø–µ—Ä–≤—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
        try:
            WebDriverWait(driver, 5).until(
                EC.presence_of_element_located((By.CSS_SELECTOR, "li[data-i='0']"))
            )
            driver.find_element(By.CSS_SELECTOR, "li[data-i='0']").click()
            logger.info("‚úÖ –ö–ª–∏–∫–Ω—É–ª –ø–µ—Ä–≤—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É")
        except:
            logger.warning("‚ö†Ô∏è –ü–æ–¥—Å–∫–∞–∑–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –≤—ã–ø–æ–ª–Ω—è—é –ø–æ–∏—Å–∫ –Ω–∞–ø—Ä—è–º—É—é")
            search_box.submit()

        # –ñ–¥—ë–º –∫–∞—Ä—Ç–æ—á–∫–∏
        WebDriverWait(driver, 15).until(
            EC.presence_of_all_elements_located((By.CSS_SELECTOR, "div[data-testid='property-card']"))
        )

        # –ë–µ—Ä—ë–º —Å—Å—ã–ª–∫—É –∏–∑ –ø–µ—Ä–≤–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏
        first_card = driver.find_element(By.CSS_SELECTOR, "div[data-testid='property-card']")
        photo_url = first_card.find_element(By.CSS_SELECTOR, "a[data-testid='title-link']").get_attribute("href")
        clean_url = photo_url.split("?")[0]
        logger.info(f"üìå –ß–∏—Å—Ç—ã–π URL –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è: {clean_url}")

        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ç–µ–ª—è
        driver.get(clean_url)
        try:
            # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å—Ç–∞—Ä—ã–π –±–ª–æ–∫ –æ–ø–∏—Å–∞–Ω–∏—è
            WebDriverWait(driver, 5).until(
                EC.presence_of_element_located((By.ID, "property_description_content"))
            )
            description = driver.find_element(By.ID, "property_description_content").text.strip()
            logger.info(f"‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ (—Å—Ç–∞—Ä—ã–π –±–ª–æ–∫), –¥–ª–∏–Ω–∞: {len(description)} —Å–∏–º–≤–æ–ª–æ–≤")
        except:
            # –ü—Ä–æ–±—É–µ–º –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
            try:
                WebDriverWait(driver, 5).until(
                    EC.presence_of_element_located((By.CSS_SELECTOR, "div[data-capla-component-boundary*='PropertyDescription']"))
                )
                description = driver.find_element(By.CSS_SELECTOR, "div[data-capla-component-boundary*='PropertyDescription']").text.strip()
                logger.info(f"‚úÖ –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ (–Ω–æ–≤—ã–π –±–ª–æ–∫), –¥–ª–∏–Ω–∞: {len(description)} —Å–∏–º–≤–æ–ª–æ–≤")
            except:
                logger.warning("‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                description = ""

        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ, –µ—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –ª–æ–≥–∏–∫–∞ –∑–∞–ø–∏—Å–∏
        # –Ω–∞–ø—Ä–∏–º–µ—Ä: save_description_to_json(hotel_name, description)

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Ñ–æ—Ç–æ (–∫–∞–∫ —Ä–∞–Ω—å—à–µ)
        return photo_url

    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –Ω–∞ Booking: {e}")
        return None

    finally:
        driver.quit()
